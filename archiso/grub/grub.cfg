# ============================
# LnOS GRUB config (UEFI/BIOS)
# ============================

# --- Core FS/partition modules ---
insmod part_gpt
insmod part_msdos
insmod fat
insmod iso9660

# --- Video & UI (platform-aware) ---
if [ "${grub_platform}" = "efi" ]; then
  insmod efi_gop
  insmod efi_uga
else
  insmod vbe
  insmod vga
fi
insmod gfxterm
insmod gfxmenu
insmod png
insmod font

# Initialize gfxterm (font must exist or gfxterm won't enable)
if [ -f "$prefix/fonts/unicode.pf2" ]; then
  if loadfont "$prefix/fonts/unicode.pf2"; then
    # Prefer a concrete mode first; fall back to auto
    set gfxmode=1024x768,auto
    set gfxpayload=keep
    terminal_input console
    terminal_output gfxterm
  fi
fi

# --- Theme (relative to $prefix == /boot/grub) ---
if [ -f "$prefix/themes/lnos/theme.txt" ]; then
  set theme="$prefix/themes/lnos/theme.txt"
  export theme
fi
# Optional fallback background if theme doesn't set one
if [ -f "$prefix/themes/lnos/background.png" ]; then
  background_image "$prefix/themes/lnos/background.png"
fi

set menu_color_normal=white/black
set menu_color_highlight=black/light-gray
set timeout=15
set default=lnos

# --- Detect ISO label and archiso options ---
function lnos_detect_label {
  if [ -z "$lnos_root" ]; then
    # %INSTALL_DIR% -> 'arch' at build time
    # Try common kernel names in order and set matching initrd
    if search --no-floppy --file --set=lnos_root "/%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-hardened"; then
      set KERNEL="/%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-hardened"
      set INITRD="/%INSTALL_DIR%/boot/x86_64/initramfs-linux-hardened.img"
    elif search --no-floppy --file --set=lnos_root "/%INSTALL_DIR%/boot/x86_64/vmlinuz-linux"; then
      set KERNEL="/%INSTALL_DIR%/boot/x86_64/vmlinuz-linux"
      set INITRD="/%INSTALL_DIR%/boot/x86_64/initramfs-linux.img"
    elif search --no-floppy --file --set=lnos_root "/%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-lts"; then
      set KERNEL="/%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-lts"
      set INITRD="/%INSTALL_DIR%/boot/x86_64/initramfs-linux-lts.img"
    fi
  fi

  if [ -z "$lnos_vol" -a -n "$lnos_root" ]; then
    probe --label --set=lnos_vol $lnos_root
  fi
  if [ -z "$lnos_vol" ]; then
    set lnos_vol="%ARCHISO_LABEL%"
  fi

  set lnos_opts="archisobasedir=%INSTALL_DIR% archisolabel=${lnos_vol}"
}

# --- Main entries ---
menuentry "LnOS (x86_64)" --class arch --class gnu-linux --class os --id lnos {
  lnos_detect_label
  if [ -n "$lnos_root" ]; then set root=$lnos_root; else search --no-floppy --set=root --label $lnos_vol; fi
  echo "Boot from label: $lnos_vol"
  echo "Kernel: $KERNEL"
  linux $KERNEL $lnos_opts
  echo "Initrd: $INITRD"
  initrd $INITRD
}

menuentry "LnOS (x86_64, nomodeset)" --class arch --class gnu-linux --class os --id lnos-nomodeset {
  lnos_detect_label
  if [ -n "$lnos_root" ]; then set root=$lnos_root; else search --no-floppy --set=root --label $lnos_vol; fi
  linux $KERNEL $lnos_opts nomodeset
  initrd $INITRD
}

menuentry "LnOS (x86_64, copy to RAM)" --class arch --class gnu-linux --class os --id lnos-copytoram {
  lnos_detect_label
  if [ -n "$lnos_root" ]; then set root=$lnos_root; else search --no-floppy --set=root --label $lnos_vol; fi
  linux $KERNEL $lnos_opts copytoram=y cow_spacesize=2G
  initrd $INITRD
}

menuentry "LnOS (x86_64, debug mode)" --class arch --class gnu-linux --class os --id lnos-debug {
  lnos_detect_label
  if [ -n "$lnos_root" ]; then set root=$lnos_root; else search --no-floppy --set=root --label $lnos_vol; fi
  linux $KERNEL $lnos_opts debug loglevel=7
  initrd $INITRD
}

# --- Manual label rescue (premount shell) ---
menuentry "LnOS (manual label rescue)" --id lnos-manual {
  # Prompt once; Enter accepts default
  if [ -z "$lnos_vol" ]; then
    read --prompt="Enter ISO label (default %ARCHISO_LABEL%): " lnos_input
    if [ -n "$lnos_input" ]; then
      set lnos_vol=$lnos_input
    else
      set lnos_vol="%ARCHISO_LABEL%"
    fi
  fi
  set lnos_opts="archisobasedir=%INSTALL_DIR% archisolabel=${lnos_vol}"
  search --no-floppy --set=root --label $lnos_vol || true
  linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux $lnos_opts break=premount
  initrd /%INSTALL_DIR%/boot/x86_64/initramfs-linux.img
}

# --- UEFI helpers ---
if [ "${grub_platform}" = "efi" ]; then
  menuentry 'UEFI Firmware Settings' --id uefi-firmware { fwsetup }
fi

menuentry "System shutdown" { halt }
menuentry "System restart"  { reboot }
