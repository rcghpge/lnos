# Load partition and filesystem support
insmod part_gpt
insmod part_msdos
insmod fat
insmod iso9660

# Load graphics and theme modules early for reliability
insmod all_video
insmod font
insmod gfxterm
insmod gfxmenu
insmod png
insmod vbe
insmod vga

# Load font first (critical for gfxterm)
if loadfont "${prefix}/fonts/unicode.pf2" ; then
    # Set graphics mode with fallbacks for different environments
    # Try specific mode first, then auto fallback
    set gfxmode="1024x768x32,auto"
    set gfxpayload=keep
    terminal_input console
    terminal_output gfxterm
    
    # Load LnOS theme if available
    if [ -f "${prefix}/themes/lnos/theme.txt" ]; then
        set theme="${prefix}/themes/lnos/theme.txt"
        export theme
    fi
else
    # Fallback if font loading fails
    echo "Warning: Could not load GRUB font, using text mode"
fi

# Menu appearance settings
set menu_color_normal=white/black
set menu_color_highlight=black/light-gray
set timeout=15
set default=lnos

# Fallback background if theme doesn't load
if [ "${grub_platform}" == "efi" ]; then
    if [ -f "${prefix}/themes/lnos/background.png" ]; then
        background_image "${prefix}/themes/lnos/background.png"
    fi
fi

menuentry "LnOS (x86_64)" --class arch --class gnu-linux --class gnu --class os --id 'lnos' {
    set gfxpayload=keep
    search --no-floppy --set=root --label %ARCHISO_LABEL%
    echo "Loading kernel..."
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL%
    echo "Loading initrd..."
    initrd /%INSTALL_DIR%/boot/x86_64/initramfs-linux.img
    echo "Booting..."
}

menuentry "LnOS (x86_64, nomodeset)" --class arch --class gnu-linux --class gnu --class os --id 'lnos-nomodeset' {
    set gfxpayload=keep
    search --no-floppy --set=root --label %ARCHISO_LABEL%
    echo "Loading kernel with nomodeset..."
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL% nomodeset
    echo "Loading initrd..."
    initrd /%INSTALL_DIR%/boot/x86_64/initramfs-linux.img
    echo "Booting..."
}

menuentry "LnOS (x86_64, copy to RAM)" --class arch --class gnu-linux --class gnu --class os --id 'lnos-copytoram' {
    set gfxpayload=keep
    search --no-floppy --set=root --label %ARCHISO_LABEL%
    echo "Loading kernel (copy to RAM)..."
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL% copytoram=y
    echo "Loading initrd..."
    initrd /%INSTALL_DIR%/boot/x86_64/initramfs-linux.img
    echo "Booting..."
}

menuentry "LnOS (x86_64, debug mode)" --class arch --class gnu-linux --class gnu --class os --id 'lnos-debug' {
    set gfxpayload=keep
    search --no-floppy --set=root --label %ARCHISO_LABEL%
    echo "Debug: Loading kernel..."
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL% debug loglevel=7
    echo "Debug: Loading minimal initrd..."
    initrd /%INSTALL_DIR%/boot/x86_64/initramfs-linux.img
    echo "Debug: Booting with verbose output..."
}

if [ "${grub_platform}" == "efi" ]; then
    if [ "${grub_cpu}" == "x86_64" ]; then
        menuentry "UEFI Shell" {
            insmod chain
            search --no-floppy --set=root --label %ARCHISO_LABEL%
            chainloader /shellx64.efi
        }
    elif [ "${grub_cpu}" == "i386" ]; then
        menuentry "UEFI Shell" {
            insmod chain
            search --no-floppy --set=root --label %ARCHISO_LABEL%
            chainloader /shellia32.efi
        }
    fi

    menuentry 'UEFI Firmware Settings' --id 'uefi-firmware' {
        fwsetup
    }
fi

menuentry "System shutdown" {
    echo "System shutting down..."
    halt
}

menuentry "System restart" {
    echo "System restarting..."
    reboot
}