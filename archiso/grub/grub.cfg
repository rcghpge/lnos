insmod part_gpt
insmod part_msdos
insmod fat
insmod iso9660

insmod all_video
insmod font

if loadfont "${prefix}/fonts/unicode.pf2" ; then
    insmod gfxterm
    set gfxmode="auto"
    terminal_input console
    terminal_output gfxterm
fi

set menu_color_normal=white/black
set menu_color_highlight=black/light-gray
set timeout=15
set default=lnos

# VM compatibility settings
set gfxmode=auto
insmod vbe
insmod vga

# --- LnOS: ISO label detection and set defaults ---
# Finds the device that holds our kernel, probes its label,
# and builds a consistent cmdline fragment for archiso.
function lnos_detect_label {
    # Try to find the device containing the hardened kernel
    if [ -z "$lnos_root" ]; then
        # %INSTALL_DIR% -> 'arch' after substitution
        search --no-floppy --file --set=lnos_root "/%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-hardened"
    fi

    # Probe volume label from that device
    if [ -z "$lnos_vol" -a -n "$lnos_root" ]; then
        probe --label --set=lnos_vol $lnos_root
    fi

    # Lastâ€‘ditch default label if probing failed
    if [ -z "$lnos_vol" ]; then
        set lnos_vol="%ARCHISO_LABEL%"
    fi

    # Export final cmdline fragment used by all entries
    set lnos_opts="archisobasedir=%INSTALL_DIR% archisolabel=${lnos_vol}"
}

menuentry "LnOS (x86_64)" --class arch --class gnu-linux --class gnu --class os --id 'lnos' {
    set gfxpayload=keep
    lnos_detect_label
    if [ -n "$lnos_root" ]; then
        set root=$lnos_root
    else
        search --no-floppy --set=root --label $lnos_vol
    fi
    echo "Boot from label: $lnos_vol"
    echo "Loading kernel..."
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-hardened $lnos_opts
    echo "Loading initrd..."
    initrd /%INSTALL_DIR%/boot/x86_64/initramfs-linux-hardened.img
    echo "Booting..."
}

menuentry "LnOS (x86_64, nomodeset)" --class arch --class gnu-linux --class gnu --class os --id 'lnos-nomodeset' {
    set gfxpayload=keep
    lnos_detect_label
    if [ -n "$lnos_root" ]; then
        set root=$lnos_root
    else
        search --no-floppy --set=root --label $lnos_vol
    fi
    echo "Loading kernel with nomodeset..."
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-hardened $lnos_opts nomodeset
    echo "Loading initrd..."
    initrd /%INSTALL_DIR%/boot/x86_64/initramfs-linux-hardened.img
    echo "Booting..."
}

menuentry "LnOS (x86_64, copy to RAM)" --class arch --class gnu-linux --class gnu --class os --id 'lnos-copytoram' {
    set gfxpayload=keep
    lnos_detect_label
    if [ -n "$lnos_root" ]; then
        set root=$lnos_root
    else
        search --no-floppy --set=root --label $lnos_vol
    fi
    echo "Loading kernel (copy to RAM)..."
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-hardened $lnos_opts copytoram=y cow_spacesize=2G
    echo "Loading initrd..."
    initrd /%INSTALL_DIR%/boot/x86_64/initramfs-linux-hardened.img
    echo "Booting..."
}

menuentry "LnOS (x86_64, debug mode)" --class arch --class gnu-linux --class gnu --class os --id 'lnos-debug' {
    set gfxpayload=keep
    lnos_detect_label
    if [ -n "$lnos_root" ]; then
        set root=$lnos_root
    else
        search --no-floppy --set=root --label $lnos_vol
    fi
    echo "Debug: Loading kernel..."
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-hardened $lnos_opts debug loglevel=7
    echo "Debug: Loading initrd..."
    initrd /%INSTALL_DIR%/boot/x86_64/initramfs-linux-hardened.img
    echo "Debug: Booting with verbose output..."
}

# Manual fallbacks: lets you type a label and drops to premount shell if needed
menuentry "LnOS (manual label rescue)" --id 'lnos-manual' {
    set gfxpayload=keep
    # Prompt once; Enter accepts default
    if [ -z "$lnos_vol" ]; then
        read --prompt="Enter ISO label (default %ARCHISO_LABEL%): " lnos_input
        if [ -n "$lnos_input" ]; then
            set lnos_vol=$lnos_input
        else
            set lnos_vol="%ARCHISO_LABEL%"
        fi
    fi
    set lnos_opts="archisobasedir=%INSTALL_DIR% archisolabel=${lnos_vol}"
    search --no-floppy --set=root --label $lnos_vol || true
    echo "Rescue boot from label: $lnos_vol"
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-hardened $lnos_opts break=premount
    initrd /%INSTALL_DIR%/boot/x86_64/initramfs-linux-hardened.img
}

# UEFI helpers
if [ "${grub_platform}" = "efi" ]; then
    if [ "${grub_cpu}" = "x86_64" ]; then
        menuentry "UEFI Shell" {
            insmod chain
            lnos_detect_label
            if [ -n "$lnos_root" ]; then
                set root=$lnos_root
            else
                search --no-floppy --set=root --label $lnos_vol
            fi
            chainloader /shellx64.efi
        }
    elif [ "${grub_cpu}" = "i386" ]; then
        menuentry "UEFI Shell" {
            insmod chain
            lnos_detect_label
            if [ -n "$lnos_root" ]; then
                set root=$lnos_root
            else
                search --no-floppy --set=root --label $lnos_vol
            fi
            chainloader /shellia32.efi
        }
    fi

    menuentry 'UEFI Firmware Settings' --id 'uefi-firmware' {
        fwsetup
    }
fi

menuentry "System shutdown" {
    echo "System shutting down..."
    halt
}

menuentry "System restart" {
    echo "System restarting..."
    reboot
}

