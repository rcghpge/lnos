name: LN OS CI/CD (Sandbox)

on:
  push:
    branches: [sandbox]
  schedule:
    - cron: '0 3 * * 6'
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sandbox branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: sandbox
          persist-credentials: false

      - name: Set up Git credentials
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set authenticated GitHub remote
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git

      - name: Fetch origin and create sandbox backup
        run: |
          git fetch origin
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          BACKUP_BRANCH="sandbox-recovery-$TIMESTAMP"
          git checkout -B "$BACKUP_BRANCH" origin/sandbox
          git push origin "$BACKUP_BRANCH"
          echo "üì¶ Backup created: $BACKUP_BRANCH"

      - name: Rebase sandbox with origin/main
        run: |
          git checkout sandbox
          git fetch origin
          git rebase origin/main

      - name: Compare sandbox to origin/main
        run: |
          git fetch origin
          BEHIND=$(git log origin/sandbox..origin/main --oneline | wc -l)
          AHEAD=$(git log origin/main..origin/sandbox --oneline | wc -l)
          echo "üìâ Commits behind main: $BEHIND"
          echo "üìà Commits ahead of main: $AHEAD"

      - name: Pull latest sandbox before push
        run: git pull --rebase origin sandbox

      - name: Push sandbox (if fast-forward)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git
          git push origin sandbox || {
            echo "::warning::Push failed. Manual sync required."
            exit 0
          }

      - name: Tag sandbox pre-release
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          SHORT_SHA=$(git rev-parse --short HEAD)
          PRERELEASE_TAG="v0.0.1-sandbox+${TIMESTAMP}-${SHORT_SHA}"
          git tag "$PRERELEASE_TAG"
          git push origin "$PRERELEASE_TAG"
          echo "üè∑Ô∏è Tagged sandbox release: $PRERELEASE_TAG"

