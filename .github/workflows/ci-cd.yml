name: LN OS CI/CD (Sandbox Sync)

on:
  schedule:
    - cron: '0 3 * * 6' 
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  sync-sandbox:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout from fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Git credentials
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set authenticated GitHub remote
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git

      - name: Fetch origin and create sandbox branch if missing
        run: |
          git fetch origin
          if ! git show-ref --quiet refs/remotes/origin/sandbox; then
            git checkout -b sandbox origin/main
            git push -u origin sandbox
            echo "üÜï Created sandbox branch from origin/main"
          fi

      - name: Backup sandbox before rebase
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          BACKUP_BRANCH="sandbox-recovery-$TIMESTAMP"
          git checkout -B "$BACKUP_BRANCH" origin/sandbox
          git push origin "$BACKUP_BRANCH"
          echo "üì¶ Backup branch pushed: $BACKUP_BRANCH"

      - name: Rebase sandbox with origin/main
        run: |
          git checkout sandbox
          git rebase origin/main

      - name: Compare commit difference with origin/main
        run: |
          echo "üîç Comparing origin/sandbox with origin/main..."
          git fetch origin
          BEHIND=$(git log origin/sandbox..origin/main --oneline | wc -l)
          AHEAD=$(git log origin/main..origin/sandbox --oneline | wc -l)
          echo "üìâ Commits behind main: $BEHIND"
          echo "üìà Commits ahead of main: $AHEAD"
          if [ "$BEHIND" -eq 0 ] && [ "$AHEAD" -eq 0 ]; then
            echo "‚úÖ Sandbox is perfectly in sync with origin/main."
          elif [ "$BEHIND" -gt 0 ]; then
            echo "::warning: ‚ö†Ô∏è Sandbox is $BEHIND commits behind origin/main."
          elif [ "$AHEAD" -gt 0 ]; then
            echo "::warning: üöÄ Sandbox is $AHEAD commits ahead of origin/main."
          fi

      - name: Pull latest from fork before push
        run: git pull --rebase origin sandbox

      - name: Push only if fast-forward is possible
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git
          if git push origin sandbox; then
            echo "‚úÖ Push successful. Sandbox is up to date."
          else
            echo "::warning: ‚ùå Push failed. Manual sync required."
            exit 0
          fi

      - name: Tag sandbox pre-release build
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          SHORT_SHA=$(git rev-parse --short HEAD)
          PRERELEASE_TAG="v0.0.1-sandbox+${TIMESTAMP}-${SHORT_SHA}"

          git tag "$PRERELEASE_TAG"
          git push origin "$PRERELEASE_TAG"

          echo "üè∑Ô∏è Tagged sandbox pre-release: $PRERELEASE_TAG"

