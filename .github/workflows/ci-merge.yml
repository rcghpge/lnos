name: Merge

on:
  push:
    branches: [merge]
  workflow_dispatch:
  schedule:
    - cron: '0 21 * * 5'  # Fridays at 3 PM CST

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  stage-merges:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Authenticate GitHub remote
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git

      - name: Install gh cli for ci runtime 
        run: |
          sudo rm -rf /usr/bin/gh
          curl -sSL https://github.com/cli/cli/releases/latest/download/gh_$(curl -s https://api.github.com/repos/cli/cli/releases/latest | grep -Po '"tag_name": "\K.*?(?=")').linux_amd64.tar.gz | tar -xz
          sudo cp gh_*/bin/gh /usr/bin/
          gh --version

      - name: Fetch latest branches
        run: |
          git fetch origin main merge sandbox

      - name: Checkout merge branch
        run: git checkout merge

      - name: Merge origin/main to merge branch
        run: |
          echo "üîÑ Merging origin/main to merge..."
          git merge origin/main --no-edit --strategy=recursive -X ours || {
            echo "‚ùå Merge conflict detected. Aborting."
            git merge --abort
            exit 1
          }

      - name: Push updated merge branch
        run: git push origin merge

      - name: Generate PR's
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üîç Checking for existing PR: merge ‚Üí sandbox"
          EXISTING_PR=$(gh pr list --base sandbox --head merge --json number --jq '.[0].number')

          if [ -z "$EXISTING_PR" ]; then
            echo "üöÄ Creating draft PR: merge ‚Üí sandbox"
            PR_URL=$(gh pr create \
              --base sandbox \
              --head merge \
              --title "Merge main to sandbox [via CI]" \
              --body "Automated PR to stage changes from \`main\` into \`sandbox\` via \`merge\` branch." \
              --draft \
              --json url --jq '.url')

            echo "üè∑Ô∏è Adding 'ci' label to PR"
            gh pr edit "$PR_URL" --add-label "ci"
          else
            echo "‚úÖ PR already exists: merge ‚Üí sandbox (#$EXISTING_PR)"
          fi

