name: Build LnOS Sandbox ISO
# Sandbox ISOs and Images builder for development/testing.

on:
  push:
    branches: [sandbox]
    tags:
      - 'sandbox-*'
    paths:
      - 'archiso/**'
      - 'scripts/**'
      - '.github/workflows/build-sandbox-iso.yml' 
      - '*.sh'
  workflow_dispatch:
    inputs:
      architecture:
        description: 'Target architecture'
        required: true
        default: 'x86_64'
        type: choice
        options:
          - 'x86_64'
          - 'aarch64'
          - 'both'

permissions:
  contents: write

jobs:
  build-x86_64:
    if: github.event.inputs.architecture == 'x86_64' ||
        github.event.inputs.architecture == 'both' ||
        github.event.inputs.architecture == '' ||
        startsWith(github.ref, 'refs/tags/sandbox-')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check versions from tag
        id: version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/sandbox-* ]]; then
            VERSION=$(basename "${GITHUB_REF}" | sed 's/^sandbox-//')
          else
            VERSION=$(date +%Y.%m.%d)
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: x86_64 ISO builds in Docker
        run: |
          docker run --rm --privileged \
            --cap-add=ALL \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e HOST_UID=$(id -u) \
            -e HOST_GID=$(id -g) \
            archlinux:latest \
            bash -euxo pipefail -c '
              pacman -Syu --noconfirm
              pacman -S --noconfirm archlinux-keyring gnupg
              pacman-key --init
              pacman-key --populate archlinux
              pacman -S --noconfirm base-devel git archiso grub sudo
              groupadd -g $HOST_GID builder || true
              useradd -u $HOST_UID -g $HOST_GID -m builder || true
              echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/builder
              chown -R $HOST_UID:$HOST_GID /workspace
              sudo -u builder bash -c "
                chmod +x build-iso.sh
                chmod +x archiso/airootfs/root/customize_airootfs.sh || true
                ./build-iso.sh x86_64
              "
            '

      - name: Check Sandbox ISOs; generate checksums
        run: |
          set -euo pipefail
          mkdir -p out
          ISO=$(ls out/*.iso 2>/dev/null | head -n1 || true)
          if [[ -z "${ISO:-}" ]]; then
            echo "‚ùå No ISO found under ./out after build."
            find out -maxdepth 2 -type f -ls || true
            exit 1
          fi
          NEWNAME="lnos-${{ steps.version.outputs.VERSION }}-x86_64-sandbox.iso"
          mv "$ISO" "out/$NEWNAME"
          sha256sum "out/$NEWNAME" | tee out/SHA256SUMS

      - name: Import GPG key - sign Sandbox ISOs
        env:
          GNUPGHOME: ${{ runner.temp }}/.gnupg
          GPG_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mkdir -p "$GNUPGHOME"
          chmod 700 "$GNUPGHOME"
          if echo "$GPG_KEY" | head -1 | grep -q "BEGIN PGP PRIVATE KEY BLOCK"; then
            echo "$GPG_KEY" | gpg --batch --import
          else
            echo "$GPG_KEY" | base64 --decode | gpg --batch --import -
          fi
          gpg --batch --yes --pinentry-mode loopback \
            --passphrase "$PASSPHRASE" \
            --armor --detach-sign \
            --output out/lnos-${{ steps.version.outputs.VERSION }}-x86_64-sandbox.iso.asc \
            out/lnos-${{ steps.version.outputs.VERSION }}-x86_64-sandbox.iso

      - name: Generates ISO, signature, and checksums
        uses: actions/upload-artifact@v4
        with:
          name: lnos-${{ steps.version.outputs.VERSION }}-x86_64-sandbox
          path: |
            out/lnos-${{ steps.version.outputs.VERSION }}-x86_64-sandbox.iso
            out/lnos-${{ steps.version.outputs.VERSION }}-x86_64-sandbox.iso.asc
            out/SHA256SUMS
          if-no-files-found: error
          compression-level: 0
          retention-days: 30

      - name: Generate Sandbox Tags
        if: github.ref == 'refs/heads/sandbox'
        run: |
          TAG_NAME="sandbox-${{ steps.version.outputs.VERSION }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"

  build-aarch64:
    if: github.event.inputs.architecture == 'aarch64' ||
        github.event.inputs.architecture == 'both' ||
        github.event.inputs.architecture == '' ||
        startsWith(github.ref, 'refs/tags/sandbox-')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: AArch64 Image Builds in Docker
        run: |
          docker run --rm --privileged \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          archlinux:latest \
          bash -euxo pipefail -c '
            pacman -Syu --noconfirm
            pacman -S --noconfirm archlinux-keyring gnupg
            pacman-key --init
            pacman-key --populate archlinux
            pacman -S --noconfirm git wget parted dosfstools e2fsprogs util-linux multipath-tools
            modprobe loop || true
            modprobe dm_mod || true

            for i in $(seq 0 7); do
              [ -e /dev/loop$i ] || mknod -m 660 /dev/loop$i b 7 $i || true
            done

            chmod +x build-arm-image.sh build-arm-minimal.sh
            ./build-arm-minimal.sh rpi4
            ./build-arm-image.sh rpi4
          '

      - name: Upload aarch64 images
        uses: actions/upload-artifact@v4
        with:
          name: lnos-aarch64-rpi4-sandbox
          path: |
            out/*.img
            out/*.img.xz
          if-no-files-found: error
          compression-level: 0
          retention-days: 30

  create-release:
    if: startsWith(github.ref, 'refs/tags/sandbox-')
    needs: [build-x86_64, build-aarch64]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release-assets/

      - name: Final artifact listing
        run: find ./release-assets -type f -ls || true

      - name: Create GitHub Release with Sandbox Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: LnOS Sandbox Release ${{ github.ref_name }}
          body: |
            üöß **Sandbox Build** for testing & preview
            This release contains ISO/IMGs from the sandbox branch.

            Artifacts:
            - GPG signed `.iso` and `.img` files
            - SHA256SUMS

            ‚ö†Ô∏è Not production ready. Use only for development/QA.
          files: |
            ./release-assets/**/*.iso
            ./release-assets/**/*.iso.asc
            ./release-assets/**/SHA256SUMS
            ./release-assets/**/*.img
            ./release-assets/**/*.img.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

