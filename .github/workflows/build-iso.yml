name: Build LnOS Sandbox ISO
# Sandbox ISO builder for development/testing. Triggered on sandbox push, tag, or manual dispatch.

on:
  push:
    branches: [sandbox]
    tags: 
      - 'sandbox-*'
    paths:
      - 'archiso/**'
      - 'scripts/**'
      - '.github/workflows/build-iso.yml'
      - '*.sh'
  workflow_dispatch:
    inputs:
      architecture:
        description: 'Target architecture'
        required: true
        default: 'x86_64'
        type: choice
        options:
          - 'x86_64'
          - 'aarch64'
          - 'both'

permissions:
  contents: write

jobs:
  build-x86_64:
    if: github.event.inputs.architecture == 'x86_64' ||
        github.event.inputs.architecture == 'both' ||
        github.event.inputs.architecture == '' ||
        startsWith(github.ref, 'refs/tags/sandbox-')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: |
          VERSION="dev"
          if [[ "${GITHUB_REF}" == refs/tags/sandbox-* ]]; then
            VERSION=$(basename "${GITHUB_REF}" | sed 's/sandbox-test-//')
          else
            VERSION=$(date +%Y.%m.%d)
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: x86_64 ISO Builds in Docker (with UID/GID checks)
        run: |
          docker run --rm --privileged \
          --cap-add=ALL \
          --security-opt=apparmor:unconfined \
          --security-opt=seccomp=unconfined \
          -v /sys/fs/cgroup:/sys/fs/cgroup:rw \
          -v /dev:/dev \
          -v /proc:/proc \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          -e HOST_UID=$(id -u) \
          -e HOST_GID=$(id -g) \
          archlinux:latest \
          bash -c '
            pacman -Syu --noconfirm
            pacman -S --noconfirm base-devel git archiso grub gnupg sudo

            # Create group and user matching GitHub runner UID/GID
            groupadd -g $HOST_GID builder || true
            useradd -u $HOST_UID -g $HOST_GID -m builder || true

            # Add passwordless sudo for builder
            echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/builder
            chmod 0440 /etc/sudoers.d/builder

            # Give workspace permissions to the builder
            chown -R $HOST_UID:$HOST_GID /workspace

            # Run ISO build as builder user
            sudo -u builder bash -c "
                chmod +x build-iso.sh
                chmod +x archiso/airootfs/root/customize_airootfs.sh || true
                ./build-iso.sh x86_64
              "
            '

      - name: Set ISO Tags for Sandbox ISOs
        run: |
          mkdir -p out
          ISO=$(ls out/*.iso | head -n1)
          NEWNAME="lnos-${{ steps.version.outputs.VERSION }}-x86_64-sandbox.iso"
          mv "$ISO" "out/$NEWNAME"
          echo "âœ… Renamed ISO to: $NEWNAME"

      - name: GPG signatures for Sandbox ISOs
        run: |
          mkdir -p "$GNUPGHOME"

          echo "$GPG_KEY" | gpg --batch --import

          gpg --batch --yes --pinentry-mode loopback \
            --output out/lnos-${{ steps.version.outputs.VERSION }}-x86_64-sandbox.iso.asc \
            --armor --detach-sign out/lnos-${{ steps.version.outputs.VERSION }}-x86_64-sandbox.iso
        env:
          GNUPGHOME: /github/home/.gnupg
          GPG_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Generate ISO artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lnos-${{ steps.version.outputs.VERSION }}-x86_64-sandbox
          path: out/*
          retention-days: 30

      - name: Generate Git Tags
        if: github.ref == 'refs/heads/sandbox'
        run: |
          TAG_NAME="sandbox-${{ steps.version.outputs.VERSION }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"

  build-aarch64:
    if: github.event.inputs.architecture == 'aarch64' ||
        github.event.inputs.architecture == 'both' ||
        github.event.inputs.architecture == '' ||
        startsWith(github.ref, 'refs/tags/sandbox-')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: AArch64 build images in Docker
        run: |
          docker run --rm --privileged \
            --cap-add=ALL \
            --security-opt=apparmor:unconfined \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            archlinux:latest \
            bash -c '
              pacman -Syu --noconfirm
              pacman -S --noconfirm git wget parted dosfstools e2fsprogs multipath-tools
              pacman -Sc --noconfirm
              rm -rf /var/cache/pacman/pkg/* /tmp/*
              chmod +x build-arm-image.sh build-arm-minimal.sh
              ./build-arm-minimal.sh rpi4
              ./build-arm-image.sh rpi4
            '

      - name: Generate aarch64 images
        uses: actions/upload-artifact@v4
        with:
          name: lnos-aarch64-rpi4-sandbox
          path: out/*.img
          retention-days: 30

