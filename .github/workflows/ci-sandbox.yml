name: LN OS CI/CD (Sandbox)

on:
  push:
    branches: [sandbox]
  schedule:
    - cron: '0 3 * * 6'
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sandbox branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: sandbox
          persist-credentials: false

      - name: Set up Git credentials
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set authenticated GitHub remote
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git

      - name: Backup sandbox branch
        run: |
          git fetch origin
          TIMESTAMP="$(date +%Y%m%d%H%M%S)"
          BACKUP_BRANCH="sandbox-backup-${TIMESTAMP}"
          git checkout -b "$BACKUP_BRANCH" origin/sandbox
          git push origin "$BACKUP_BRANCH"

      - name: Reset sandbox to origin/main
        run: |
          git checkout sandbox
          git fetch origin
          git reset --hard origin/main

      - name: Restore sandbox-specific workflow file
        run: |
          git restore --source=origin/sandbox .github/workflows/ci-sandbox.yml || echo "ci-sandbox.yml does not exist in old sandbox"

      - name: Validate diffs (must only be ci-sandbox.yml)
        run: |
          DIFF_FILES=$(git diff --name-only)
          echo "::notice::Diffs after patch: $DIFF_FILES"
          if [ "$(echo "$DIFF_FILES" | wc -l)" -gt 1 ] || ! echo "$DIFF_FILES" | grep -q '^\.github/workflows/ci-sandbox\.yml$'; then
            echo "::error::Unexpected changes detected. Only ci-sandbox.yml should differ from origin/main."
            git diff
            exit 1
          fi

      - name: Commit sandbox override
        run: |
          git add .github/workflows/ci-sandbox.yml
          git commit -m "Preserve ci-sandbox.yml on top of origin/main" || echo "Nothing to commit"

      - name: Force-push sandbox
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git push origin sandbox --force

      - name: Tag sandbox pre-release
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          SHORT_SHA=$(git rev-parse --short HEAD)
          PRERELEASE_TAG="v0.0.1-sandbox+${TIMESTAMP}-${SHORT_SHA}"
          git tag "$PRERELEASE_TAG"
          git push origin "$PRERELEASE_TAG"
