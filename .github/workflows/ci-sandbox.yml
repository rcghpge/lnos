name: LN OS CI/CD (Sandbox)

on:
  push:
    branches: [sandbox]
  schedule:
    - cron: '0 3 * * 6'
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sandbox branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: sandbox
          persist-credentials: false

      - name: Set up Git credentials
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set authenticated GitHub remote
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git

      - name: Backup sandbox branch
        run: |
          git fetch origin
          TIMESTAMP="$(date +%Y%m%d%H%M%S)"
          BACKUP_BRANCH="sandbox-backup-${TIMESTAMP}"
          git checkout -b "$BACKUP_BRANCH" origin/sandbox
          git push origin "$BACKUP_BRANCH"

      - name: Reset sandbox to origin/main
        run: |
          git checkout sandbox
          git fetch origin
          git reset --hard origin/main

      - name: Restore sandbox-specific files
        run: |
          git restore --source=origin/sandbox .github/workflows/ci-sandbox.yml || echo "ci-sandbox.yml not found"
          git restore --source=origin/sandbox scripts/install.sh || echo "install.sh not found"

      - name: Validate only sandbox-specific diffs
        run: |
          # Allowlist of sandbox-only files
          ALLOWED_FILES=(
            ".github/workflows/ci-sandbox.yml"
            "scripts/install.sh"
          )

          DIFF_FILES=$(git diff --name-only)
          echo "üîç DIFF_FILES: '$DIFF_FILES'"

          UNEXPECTED_FILES=()
          for FILE in $DIFF_FILES; do
            FOUND=false
            for ALLOWED in "${ALLOWED_FILES[@]}"; do
              if [[ "$FILE" == "$ALLOWED" ]]; then
                FOUND=true
                break
              fi
            done
            if ! $FOUND; then
              UNEXPECTED_FILES+=("$FILE")
            fi
          done

          if [ "${#UNEXPECTED_FILES[@]}" -gt 0 ]; then
            echo "::error::üö´ Unexpected changes detected: ${UNEXPECTED_FILES[*]}"
            git diff
            exit 1
          fi

      - name: Commit sandbox overrides (if needed)
        run: |
          git add .github/workflows/ci-sandbox.yml scripts/install.sh
          git commit -m "Apply sandbox overrides on origin/main" || echo "No sandbox-specific changes to commit."

      - name: Force-push sandbox
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git push origin sandbox --force

      - name: Tag sandbox pre-release
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          SHORT_SHA=$(git rev-parse --short HEAD)
          PRERELEASE_TAG="v0.0.1-sandbox+${TIMESTAMP}-${SHORT_SHA}"
          git tag "$PRERELEASE_TAG"
          git push origin "$PRERELEASE_TAG"
